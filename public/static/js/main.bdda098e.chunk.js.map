{"version":3,"sources":["components/user-pages/Signup.js","components/user-pages/Login.js","components/tree-pages/AddTree.js","components/user-pages/Logout.js","components/tree-pages/AddRecord.js","components/tree-pages/ListRecord.js","components/tree-pages/Search.js","App.js","serviceWorker.js","index.js","elcateo.JPG"],"names":["Signup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","lastName","email","username","password","message","event","_event$target","target","value","setState","defineProperty","console","log","_this2","preventDefault","axios","post","withCredentials","then","responseFromServer","newUser","data","onUserChange","catch","err","response","_this3","currentUser","react_default","a","createElement","className","style","marginTop","onSubmit","handleSubmit","onChange","genircSync","type","id","placeholder","required","data-error","class","href","Component","Login","login","history","push","genericSync","data-color","AddTree","_this$state","position","latitud","altitud","desciption","groupId","concat","process","responseFromDB","treeInfo","treeInf","_id","groupArray","get","responseFromApi","map","oneGroup","Logout","AddRecord","params","match","irrigation","irrigationdescription","soilhelth","soildescription","salt","saltdescription","illness","illnessdescription","recordInf","record","isSubmitSuccess","illnessArray","illnessArrayinfo","for","require","oneIllness","ListRecord","showEdit","treeRecordArray","records","react_barcode_default","readonly","collapse","onClick","showEditForm","oneRecord","createdAt","Search","searchTree","search","tree","App","withCredential","responseFromBackend","theUser","syncCurrentUser","user","src","logo","alt","height","react_router_dom","to","react_router","exact","path","render","tree_pages_Search","assign","userDoc","user_pages_Login","user_pages_Signup","user_pages_Logout","tree_pages_AddTree","tree_pages_AddRecord","component","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bdda098e.chunk.js","sourcesContent":["import React, { Component } from 'react' ;\nimport axios from 'axios'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Signup extends Component {\n        constructor(props){\n            super(props);\n            this.state={\n                //this is the req.body of each input field\n                name:\"\",\n                lastName:\"\",\n                email:\"\",\n                username:\"\",\n                password:\"\",\n                message:null,\n            }\n        }\n// use this foer every react fromr to catch the event of the from\ngenircSync(event){\n    \n    const { name, value } = event.target;\n    this.setState({ [name]: value})\n    console.log(\"value\", event.target.value)\n\n}\n\nhandleSubmit(event){\n    event.preventDefault();\n    axios.post(\n        \"http://localhost:5000/api/signup\", //route where I sent the inf\n        this.state, // what I am sending (since its post route I need to send the form info)\n        { withCredentials:true} // and optional credential : true in CORS\n    )\n    .then( responseFromServer => {\n        console.log ( \"response \", responseFromServer)\n        // .data is a axios property \n        const newUser = responseFromServer.data;\n        //method to update the state\n        this.props.onUserChange(newUser);\n    })\n    .catch(err =>{\n        //console.log(\"error While signup\", err)\n        if (err.response && err.response.data){\n            return this.setState({ message:err.response.data.message})\n        }\n    })\n}\n\n   render(){\n       if(this.props.currentUser){\n           return(\n            <section> <h2> Your are signed up!</h2>\n            <p> Welcome , { this.props.currentUser.name}</p>\n            <p> Email, { this.props.currentUser.email}</p>\n            </section>\n           )\n       }\n        return(\n                <section>\n                    <div className=\"container\">\n                    <div className=\"row\" style={{marginTop:150}}>\n                    <div className=\"col-xs-12 col-sm-8 col-md-6 col-sm-offset-2 col-md-offset-3\">\n                    <form onSubmit ={event => this.handleSubmit(event)} >\n                    <h2>Please Register</h2>\n                        <hr className=\"colorgraph\"/>\n                        <div className=\"form-group\">\n                            <input \n                            value={ this.state.name}\n                            onChange={ event => this.genircSync(event)}\n                            type=\"text\"\n                            name=\"name\" \n                            id=\"name\" \n                            className=\"form-control input-lg\" \n                            placeholder=\"Name\" \n                            required data-error=\"Please, Add Name.\" \n                            />\n                            <div className=\"help-block with-errors\"></div>\n                        </div> \n  \n                        <div className=\"form-group\">\n                            <input \n                            value={ this.state.lastName}\n                            onChange={ event => this.genircSync(event)}\n                            type=\"text\" \n                            name=\"lastName\" \n                            id=\"lastName\" \n                            className=\"form-control input-lg\" \n                            placeholder=\"lastName\" \n                            required data-error=\"Please, Add LastName.\" \n                            />\n                            <div className=\"help-block with-errors\"></div>\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                            value={ this.state.email}\n                            onChange={ event => this.genircSync(event)}\n                            type=\"text\" \n                            name=\"email\" \n                            id=\"email\" \n                            className=\"form-control input-lg\" \n                            placeholder=\"email\" \n                            required data-error=\"Please, Add Email.\" \n                            />\n                            <div className=\"help-block with-errors\"></div>\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                            type=\"text\" \n                            value={ this.state.username}\n                            onChange={event => this.genircSync(event)}\n                            name=\"username\" \n                            id=\"username\" \n                            className=\"form-control input-lg\" \n                            placeholder=\"username\" \n                            required data-error=\"Please, Add username.\" \n                            />\n                            <div className=\"help-block with-errors\"></div>\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                            value={ this.state.password}\n                            onChange={ event => this.genircSync(event)}\n                            type=\"password\" \n                            name=\"password\" \n                            id=\"password\" \n                            className=\"form-control input-lg\" \n                            placeholder=\"Name\" \n                            required data-error=\"Please, Add password.\" \n                            />\n                            <div className=\"help-block with-errors\"></div>\n                        </div> \n\n\n                        <hr class=\"colorgraph\" />\n                                <div class=\"row\">\n                                    <div class=\"col-xs-6 col-sm-6 col-md-6\">\n                                        <input type=\"submit\" \n                                        class=\"btn btn-lg btn-success btn-block\" value=\"Sign In\"/>\n                                    </div>\n                                    <div class=\"col-xs-6 col-sm-6 col-md-6\">\n                                        <a href=\"/\" class=\"btn btn-lg btn-primary btn-block\">Login</a>\n                                    </div>\n                                </div>\n                    </form>\n                    </div>\n                    </div>\n                    </div>\n        {/* if the message is not NULL then show the message */}\n        { this.state.message && <div> { this.state.message } </div> }\n                </section>   \n\n\n\n\n        )\n    }\n\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass Login extends Component {\n        constructor(props){\n            super(props);\n            // console.log(\"/////\", this.props)\n            this.state={\n                username:'',\n                password:'',\n                message:null,\n                currentUser: null,\n            }\n        }\n\ngenericSync(event){\n    const { name, value} = event.target;\n    this.setState ( { [name]: value})\n    // console.log(\"value\", event.target.value)\n}\n\nhandleSubmit(event){\n    event.preventDefault();\n    axios.post(\n        \"http://localhost:5000/api/login\",\n        this.state,\n        { withCredentials:true}\n    )\n    .then( responseFromServer =>{\n        const login = responseFromServer.data;\n        this.props.onUserChange(login);\n        this.setState({currentUser: login})\n        // console.log('666666666 ', this.props)\n        if(this.state.currentUser){\n            // console.log(\"-0- 0- 0- 0- 0- 0-\")\n            this.props.history.push(\"/addTree\")\n        }\n    })\n    .catch(err => {\n        if(err.response && err.response.data){\n            return this.setState({ message:err.response.data.message})\n        }\n    })\n}\n\n\n    render(){\n        // console.log(this.props, 'HHLEOEOOEOEOEOEOEO')\n        return (\n            <section> \n        {/* {this.state.currentUser ? <Redirect to=\"/addTree\" /> : ( */}\n          \n                 <div className=\"container\">\n                    <div className=\"row\" style={{marginTop:150}}>\n                    <div class=\"col-xs-12 col-sm-8 col-md-6 col-sm-offset-3 col-md-offset-3\">\n                        <form onSubmit = { event => this.handleSubmit(event)}>\n                            <fieldset>\n                                <h2>Please Sign In</h2>\n                                <hr class=\"colorgraph\"/>\n                                <div class=\"form-group\">\n                                    <input \n                                    value={this.state.username}\n                                    onChange ={ event => this.genericSync(event)}\n                                    type=\"text\" \n                                    name=\"username\" \n                                    id=\"username\" \n                                    class=\"form-control input-lg\" \n                                    placeholder=\"Username\"\n                                    required data-error=\"Please, Add Username.\"/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <input \n                                    onChange = { event => this.genericSync(event)}\n                                    type=\"password\" \n                                    name=\"password\" \n                                    id=\"password\" \n                                    class=\"form-control input-lg\" \n                                    placeholder=\"Password\"\n                                    required data-error=\"Please, Add Password.\"/>\n                                </div>\n                                <span class=\"button-checkbox\">\n                                    <button type=\"button\" class=\"btn\" data-color=\"info\">Remember Me</button>\n                                        </span>\n                                <hr class=\"colorgraph\" />\n                                <div class=\"row\">\n                                    <div class=\"col-xs-6 col-sm-6 col-md-6\">\n                                        <input type=\"submit\" \n                                        class=\"btn btn-lg btn-success btn-block\" value=\"Sign In\"/>\n                                    </div>\n                                    <div class=\"col-xs-6 col-sm-6 col-md-6\">\n                                        <a href=\"/signup\" class=\"btn btn-lg btn-primary btn-block\">Register</a>\n                                    </div>\n                                </div>\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            \n        \n        </section>\n\n         \n        )\n    }\n}\nexport default Login;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass AddTree extends Component {\n    constructor(props){\n    super(props);\n    console.log('=-=-=-=-=-=-=-= ', props)\n    this.state ={\n        _id:'',\n        name:'',\n        position: '',\n        latitud: '',\n        altitud: '',\n        desciption: '',\n        groupId:'',\n        message:'',\n        groupArray:[],\n         };\n    }\n         \ngenircSync(event){\n    const { name, value } = event.target;\n    this.setState( { [name]: value})\n    console.log(\"name ==\", event.target.name, \"value ==\", event.target.value)\n }\n\n\nhandleSubmit = event => {\n        event.preventDefault();\n        const { name, position,latitud,altitud,desciption, groupId } = this.state;\n        axios\n            .post(\n                //'http://localhost:5000/api/tree',\n                `${process.env.REACT_APP_API_URL}/tree`,\n                { name, position,altitud,latitud,desciption, groupId },\n                { withCredentials:true }\n                )\n            .then(responseFromDB =>{\n              //  console.log(\"add tree\", responseFromDB.data)\n                const treeInfo = responseFromDB.data;\n                this.setState({ treeInfo })\n             //   this.props.history.push('/listRecord/5ccf7d12fc09b77672dc44de')\n           //  console.log('here!!!!')\n                //this.props.history.push(`/listRecord/${treeInfo.treeInf._id}`);\n                this.props.history.push(`/addRecord/${treeInfo.treeInf._id}`)\n             })\n            .catch( err => console.log(err))\n    }\n\n\ncomponentDidMount(){\n        axios.get(\n            //\"http://localhost:5000/api/allgroup\",\n            `${process.env.REACT_APP_API_URL}/allgroup`,\n            { withCredentials:true }\n        )\n        .then( responseFromApi => {\n            console.log( \"groups== \", responseFromApi.data)\n            this.setState( { groupArray: responseFromApi.data})\n        })\n        .catch(err => console.log(err))\n    }\n\n\n    render(){\n        const  groupArray  = this.state.groupArray\n        \n           \n        // console.log('props are: ', this.props.history)\n\n        // if (tree) {\n        //      //console.log(\"entro all tree info\", tree.treeInf._id);\n        //     // return <Redirect to={`/listRecord/${tree.treeInf._id}`}/>;\n        //     <ListRecord  theTree ={ this.state} />\n        //<Redirect to=\"/listRecord\" theTree ={this.state} />\n        // }\n   \n        return (\n         \n         <section>\n            {/* {this.state.treeInfo ?   <Redirect to={{\n                                                    pathname:\"/listRecord\" ,\n                                                    state :{id:tree.treeInf._id}} \n                                                }/>  \n            :( */}\n\n            <div className=\"row\" >\n            {/*<div className=\"col-xs-12 col-sm-8 col-md-6 col-sm-offset-2 col-md-offset-3\">/*/}\n            <div className=\"col-lg-12\">\n            <form onSubmit ={event => this.handleSubmit(event)} >\n            <h2>Add Tree</h2>\n                <hr className=\"colorgraph\"/>\n                <div className=\"form-group\">\n                    <input \n                    value={ this.state.name}\n                    onChange={ event => this.genircSync(event)}\n                    type=\"text\"\n                    name=\"name\" \n                    id=\"name\" \n                    className=\"form-control input-lg\" \n                    placeholder=\"Name\" \n                    required data-error=\"Please, Add Name.\" \n                    />\n                    <div className=\"help-block with-errors\"></div>\n                </div> \n                <hr className=\"colorgraph\"/>\n                <div className=\"form-group\">\n                    <input \n                    value={ this.state.position}\n                    onChange={ event => this.genircSync(event)}\n                    type=\"text\" \n                    name=\"position\" \n                    id=\"position\" \n                    className=\"form-control input-lg\" \n                    placeholder=\"position\" \n                    required data-error=\"Please, Add position.\" \n                    />\n                    <div className=\"help-block with-errors\"></div>\n                </div>\n                <hr className=\"colorgraph\"/>\n                <div className=\"form-group\">\n                    <input \n                    value={ this.state.latitud}\n                    onChange={ event => this.genircSync(event)}\n                    type=\"text\" \n                    name=\"latitud\" \n                    id=\"latitud\" \n                    className=\"form-control input-lg\" \n                    placeholder=\"latitud\" \n                    required data-error=\"Please, Add latitud.\" \n                    />\n                    <div className=\"help-block with-errors\"></div>\n                </div>\n                <hr className=\"colorgraph\"/>\n                <div className=\"form-group\">\n                    <input \n                    type=\"text\" \n                    value={ this.state.altitud}\n                    onChange={event => this.genircSync(event)}\n                    name=\"altitud\" \n                    id=\"altitud\" \n                    className=\"form-control input-lg\" \n                    placeholder=\"altitud\" \n                    required data-error=\"Please, Add altitud.\" \n                    />\n                    <div className=\"help-block with-errors\"></div>\n                </div>\n                <hr className=\"colorgraph\"/>\n                <div className=\"form-group\">\n                    <input \n                    value={ this.state.desciption}\n                    onChange={ event => this.genircSync(event)}\n                    type=\"text\" \n                    name=\"desciption\" \n                    id=\"desciption\" \n                    className=\"form-control input-lg\" \n                    placeholder=\"Name\" \n                    required data-error=\"Please, Add desciption.\" \n                    />\n                    <div className=\"help-block with-errors\"></div>\n                </div> \n                <hr className=\"colorgraph\"/>\n                <div className=\"form-group\">\n                \n                    <select  \n                        className=\"form-control form-control-lg\"\n                        value={ this.state.groupId}\n                        onChange={ event => this.genircSync(event)}\n                        name=\"groupId\" \n                        required data-error=\"Please, Add desciption.\">\n                        <option value=\"none\">==NONE</option>\n                        { groupArray.map(oneGroup => {\n                            return(\n                                 <option value={oneGroup._id}>{oneGroup.name}</option>\n                            )\n                        })}\n                    \n                    </select>\n                    <div className=\"help-block with-errors\"></div>\n                </div> \n                <button> Submit</button>\n            </form>\n            </div>\n            </div>\n          \n          {/* ) } */}\n\n{/* if the message is not NULL then show the message */}\n{ this.state.message && <div> { this.state.message } </div> }\n        </section> \n        )\n    }\n\n}\n\nexport default AddTree;\n","import React , { Component } from 'react';\nimport axios from 'axios';\n\nclass Logout extends Component {\n\n\n\n}\n\nexport default Logout;\n","import React ,{ Component } from 'react';\nimport axios from \"axios\";\nimport { Redirect} from 'react-router-dom'\n\nclass AddRecord extends Component {\n    constructor(props){\n        super(props);\n        //console.log(\"*******  GET PROPS ****\", props)\n        this.state = {\n            irrigation : '',\n            irrigationdescription : '',\n            soilhelth : '',\n            soildescription: '',\n            salt: '',\n            saltdescription: '',\n            illness : '',\n            illnessdescription: '',\n            illnessArray:[],\n        }\n    }\n\n\ncomponentDidMount(){\n             axios.get(\n             //`http://localhost:5000/api/illness`,  \n              `${process.env.REACT_APP_API_URL}/illness`, {\n                  withCredentials:true,\n              })\n              .then(responseFromApi => {\n                  //console.log(\"datos fron DB\", responseFromApi.data)\n                 this.setState({ illnessArray:responseFromApi.data });\n              })\n              .catch(err => {\n                  console.log(err);\n                })\n      } \n\nhandleSubmit = event =>{\n        const { params } = this.props.match\n        console.log(\"//// parames  /////\", params.id)\n        event.preventDefault();\n        const { irrigation ,\n                irrigationdescription,\n                soilhelth ,\n                soildescription,\n                salt ,\n                saltdescription,\n                illness  ,\n                illnessdescription\n                } = this.state;\n        axios \n             .post(\n               // `http://localhost:5000/api/treerecord/${params.id}`,\n                `${process.env.REACT_APP_API_URL}/treerecord/${params.id}`,\n                  { irrigation ,\n                    irrigationdescription,\n                    soilhelth ,\n                    soildescription,\n                    salt ,\n                    saltdescription,\n                    illness  ,\n                    illnessdescription},\n                    {withCredentials:true})\n              .then(responseFromDB =>{\n                console.log(\"data\", responseFromDB.data)\n                const recordInf = responseFromDB.data;\n                 this.setState({ record: recordInf ,isSubmitSuccess:true })\n                 this.props.history.push(`/listRecord/${params.id}`)\n              })\n              .catch(err => {\n                console.log(err)\n              } )      \n }\ngenircSync(event){\n    const { name, value} = event.target;\n    this.setState( { [name]: value})\n}\n\nrender(){\n    const illnessArrayinfo = this.state.illnessArray;\n    console.log (\"illnessArrayinfo\",illnessArrayinfo)\n     return(\n        <div className=\"row\">\n        {/* <div><h1>{params.id}</h1></div> */}\n        <div className=\"col-lg-12\">\n         <form id=\"contact-form\" onSubmit = { event => this.handleSubmit(event)}  >\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-group col-md-12\">\n                  <label for=\"\" className=\"col-md-12\">Irrigation*</label>\n                  <input \n                      value={ this.state.irrigation}\n                      onChange={ event => this.genircSync(event)}\n                      type=\"text\"\n                      name=\"irrigation\" \n                      id=\"irrigation\" \n                      className=\"form-control input-lg\" \n                      placeholder=\"Irrigation\" \n                      required data-error=\"Please, Add irrigation.\" \n                      />\n                     \n                </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group col-md-12\">\n                      <label for=\"\" className=\"col-md-12\">Irrigation Description*</label>\n                      <input \n                          value={ this.state.irrigationdescription}\n                          onChange={ event => this.genircSync(event)}\n                          type=\"text\"\n                          name=\"irrigationdescription\" \n                          id=\"irrigationdescription\" \n                          className=\"form-control input-lg\" \n                          placeholder=\"irrigationdescription\" \n                          required data-error=\"Please, Add irrigationdescription.\" \n                          />\n                         \n                  </div>\n              </div>\n             \n            </div> \n             <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label for=\"form_interface\">Salt</label>\n                  <input \n                      value={ this.state.salt}\n                      onChange={ event => this.genircSync(event)}\n                      type=\"text\"\n                      name=\"salt\" \n                      id=\"salt\" \n                      className=\"form-control input-lg\" \n                      placeholder=\"Salt\" \n                      required data-error=\"Please, Add irrigation.\" \n                      />\n                 \n                </div>\n                </div>\n                <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label for=\"form_interface\">Salt Description</label>\n                  <input \n                      value=''\n                      type=\"text\"\n                      name=\"saltdescription\"\n                      id=\"saltdescription\"\n                      placeholder=\"Salt Description\"\n                      className=\"form-control input-lg\"\n                      require data-error=\"Please, Add Salt Desciption\"/>\n                  \n                  \n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label for=\"form_device\">Soil *</label>\n                  <input \n                      value={ this.state.salt}\n                      onChange={ event => this.genircSync(event)}\n                      type=\"text\"\n                      name=\"soil\" \n                      id=\"soil\" \n                      className=\"form-control input-lg\" \n                      placeholder=\"Soil\" \n                      required data-error=\"Please, Add Soil.\" \n                      />\n                  \n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label for=\"form_pos\">Illness</label>\n                  <select  \n                          className=\"form-control form-control-lg\"\n                          value={ this.state.illness}\n                          onChange={ event => this.genircSync(event)}\n                          name=\"illness\" \n                          required data-error=\"Please, Add illness.\">\n                          <option value=\"none\">==NONE</option>\n                          {illnessArrayinfo.map(oneIllness => {\n                              return(\n                                 <option value={oneIllness._id}>{oneIllness.name}</option>\n                              )\n                          })}\n                    \n                  </select>\n                  <div className=\"help-block with-errors\"></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                  <label for=\"form_message\">Observation*</label>\n              \n                  <div className=\"help-block with-errors\"></div>\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <input type=\"submit\" className=\"btn btn-success btn-send\" value=\"Submit\"/>\n              </div>\n            </div>       \n          \n          </form>\n        </div>\n      </div>\n  \n    )\n }\n\n\n\n\n}\n\nexport default AddRecord;","import React ,{ Component } from 'react';\nimport axios from \"axios\";\nimport Barcode from 'react-barcode'\n\nimport { Redirect } from 'react-router-dom'\n\nclass ListRecord extends Component {\n    constructor(props){\n        super(props);\n        console.log(\"props===\", this.props)\n        this.state = {\n            showEdit:true,\n            currentUser: null,\n            treeRecordArray:[],\n        }\n    }\n\n// handleSubmit = event =>{\n//     event.preventDefault();\n//     const {} = this.state\n\n// }\n\ncomponentDidMount(){\n    const { params } = this.props.match;\n    console.log( \"listRecord params.id\", params.id)\n    // const id = this.props.theTree.treeInfo.className_id\n    // console.log(\" todo \",this.props.theTree)\n   //console.log(\"props\", this.props.theTree.className_id)\n    //   const { params } = id.match\n    //   console.log (\"params== \", params)\n      axios.get(\n        `http://localhost:5000/api/treerecord/${params.id}`,  \n      // `${process.env.REACT_APP_API_URL}/${params.id}`,\n        //  `http://localhost:5000/api/treerecord/5cbb91d2de7bd47381adeee7`,\n           {\n              withCredentials:true,\n          })\n          .then(responseFromApi => {\n              console.log(\"datos fron DB=====================\", responseFromApi.data)\n              const records = responseFromApi.data;\n              this.setState({ treeRecordArray:records});\n          })\n          .catch(err => {\n              console.log(err);\n            })\n  } \n \n  showEditForm(){\n      console.log(\"entro\" )\n      this.setState({ showEdit: false})\n  }\n\n\n    render(){\n\n     \n        const treeRecordArray = this.state.treeRecordArray;\n        const treeInfo = this.state.treeRecordArray[0];\n    //    console.log(\" tree Info ==\", treeInfo) \n    //     console.log(\"////\", this.state.treeRecordArray.length)\n   \n    const { params } = this.props.match; \n   // console.log('8888888 ----------------------- ', this.state.treeRecordArray.length)\n    return( \n      \n        // if does not have any record redirect to AddRecord\n <div className=\"Container-fluid\">\n  \n  {\n\n<div className=\"row\" >\n\n<div className=\"col-lg-8\">\n    <form onSubmit ={event => this.handleSubmit(event)} >\n    <h2>Tree</h2>\n        <hr className=\"colorgraph\"/>\n       \n            <div className=\"form-group\">\n                    <Barcode \n                         value={params.id}\n                    />\n            </div>\n           <div className=\"row\" >  \n            <div className=\"form-group\">\n                <input \n                 value={treeInfo}\n                onChange={ event => this.genircSync(event)}\n                type=\"text\"\n                name=\"name\" \n                id=\"name\" \n                className=\"form-control input-lg\" \n                placeholder=\"Name\" \n                readonly=\"readonly\"\n                required data-error=\"Please, Add Name.\" \n                />\n                <div className=\"help-block with-errors\"></div>\n            </div> \n            <hr className=\"colorgraph\"/>\n            <div className=\"form-group\">\n                <input \n                value=\"{}\"\n                onChange={ event => this.genircSync(event)}\n                type=\"text\" \n                name=\"position\" \n                id=\"position\" \n                className=\"form-control input-lg\" \n                placeholder=\"position\" \n                readonly=\"readonly\"\n                required data-error=\"Please, Add position.\" \n                />\n                <div className=\"help-block with-errors\"></div>\n            </div>\n        </div>\n   \n        <div className=\"row\" >\n            <div className=\"form-group\">\n                <input \n                value=\"{}\"\n                onChange={ event => this.genircSync(event)}\n                type=\"text\" \n                name=\"latitud\" \n                id=\"latitud\" \n                className=\"form-control input-lg\" \n                placeholder=\"latitud\" \n                readonly=\"readonly\"\n                required data-error=\"Please, Add latitud.\" \n                />\n                <div className=\"help-block with-errors\"></div>\n            </div>\n            <hr className=\"colorgraph\"/>\n            <div className=\"form-group\">\n                <input \n                type=\"text\" \n                value=\"{}\"\n                onChange={event => this.genircSync(event)}\n                name=\"altitud\" \n                id=\"altitud\" \n                className=\"form-control input-lg\" \n                placeholder=\"altitud\" \n                readonly=\"readonly\"\n                required data-error=\"Please, Add altitud.\" \n                />\n                <div className=\"help-block with-errors\"></div>\n            </div>\n        </div>\n       \n        <div className=\"row\">\n            <div className=\"form-group\">\n                <input \n                value=\"{}\"\n                onChange={ event => this.genircSync(event)}\n                type=\"text\" \n                name=\"desciption\" \n                id=\"desciption\" \n                className=\"form-control input-lg\" \n                placeholder=\"Name\" \n                readonly=\"readonly\"\n                required data-error=\"Please, Add desciption.\" \n                />\n                <div className=\"help-block with-errors\"></div>\n            </div> \n            <hr className=\"colorgraph\"/>\n            <div className=\"form-group\">\n            \n                <select  \n            className=\"form-control form-control-lg\"\n            onChange={ event => this.genircSync(event)}\n            name=\"groupId\" \n            required data-error=\"Please, Add desciption.\">\n            {/* <option value={group._id}>{group.name}</option> */}\n                \n                \n                </select>\n                <div className=\"help-block with-errors\"></div>\n               </div>   \n            </div> \n        <button> Submit</button>\n        \n    </form>\n</div>\n\n\n\n\n\n<table id=\"table\" className=\"col-lg-12 table table-striped\">\n <tbody> \n  <tr >\n      <th collapse=\"8\">\n      <button onClick={() => this.showEditForm()}>Add Record</button>\n      </th>\n  </tr>\n  \n   <tr>\n       \n            <th>DATE</th>\n            <th>IRRIGATION</th>\n            <th>SALT</th>\n            <th>SOIL</th>\n            <th>ILLNESS</th>\n            <th>I_DESCRIPTION</th>\n            <th>ALL OBSERVATION</th>\n            <th>DELETE</th>\n       \n    </tr>\n  </tbody>  \n   {treeRecordArray.map(oneRecord => {\n\n     return(\n        <tr>  \n            <th>{oneRecord.createdAt}</th>\n            <th>{oneRecord.irrigation}</th>\n            <th>{oneRecord.salt}</th>\n            <th>{oneRecord.soilhelth}</th>\n            <th>{/*oneRecord.illness.name*/}</th>\n            <th>{oneRecord.illnessdescription}</th>\n            <th>{oneRecord.soildescription}</th>\n            \n            <th><button type=\"submit\">Delete!</button></th>\n           \n        </tr> \n        )\n    })}\n  \n</table>\n</div>\n\n}  \n  </div>\n\n\n        )\n    }\n }\n\n\nexport default ListRecord","import React , { Component } from 'react';\nimport axios from 'axios';\n\nclass Search extends Component {\n                constructor(){\n                   super();\n                   this.state={\n                       search:''\n                   }\n                   console.log('= = == = = = = = == = = == = ', this.state)\n                }\n\nhandleSubmit = event =>{\n     const searchTree = this.state.search;\n     console.log(\"searhc\",searchTree)\n     event.preventDefault();\n     \n     axios\n       .get(\n        //`http://localhost:5000/api/treerecord/${searchTree}`,   \n        `${process.env.REACT_APP_API_URL}/treerecord/${searchTree}`,\n        { searchTree },\n        {withCredentials:true})\n        .then(responseFromDB =>{\n            console.log(\"db\", responseFromDB.data)\n            this.setState({ tree:responseFromDB.data})\n            this.props.history.push(`/listRecord/${searchTree}`)\n        })\n        .catch(err => { console.log(\"gfgdf\",err)})\n\n    }\n\ngenericSync(event){\n        console.log(event.target.name)\n        console.log(event.target.value)\n        const { name, value} = event.target;\n        this.setState( { [event.target.name]: event.target.value})\n        console.log(this.state);\n         }\n                                \nrender(){\n    return(\n        <div className=\"row\">\n            <div className=\"col-lg-12\">\n            <form onSubmit={ event => this.handleSubmit(event)}>\n                <input \n                  onChange={event => this.genericSync(event)}\n                  type=\"text\"\n                  name=\"search\"\n                  id=\"search\"\n                  className = \"form-control input-lg\"\n                  placeholder = \" search\"\n                />\n                <input type=\"submit\" className=\"btn btn-success btn-send\" value=\"Submit\"/>\n            </form>\n            </div>\n        </div>\n    )\n}\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport { Switch , NavLink, Route }  from 'react-router-dom'\n   \n\nimport logo from './elcateo.JPG';\nimport './App.css';\nimport axios from 'axios';\n\nimport Signup from './components/user-pages/Signup'\nimport Login from './components/user-pages/Login'\nimport AddTree from './components/tree-pages/AddTree'\nimport Logout from './components/user-pages/Logout'\nimport AddRecord from './components/tree-pages/AddRecord'\nimport ListRecord from './components/tree-pages/ListRecord'\nimport Search from './components/tree-pages/Search'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    // console.log('00000000 ', this.props)\n// we are checking if the customer is checkin\n//the first time has to be null\n    this.state ={\n      currentUser: null,\n  \n    }\n }\n\n // app.js only will load once\n //componentDimount go the the data that I want all the times\n\n componentDidMount(){\n   console.log(\"entro a componentdidmount\")\n   //talk with the back end\n   axios.get(\"http://localhost:5000/api/checkuser\", { withCredential:true})\n     .then( responseFromBackend => {\n       console.log(\"check\",responseFromBackend.data)\n      const { theUser } = responseFromBackend.data;\n      this.syncCurrentUser(theUser);\n       \n     })\n     \n }\n // if I already login update the state\n//  pass the method to my child asking if we have a user\nsyncCurrentUser(user){\n  console.log(\"user ==\", user)\n  this.setState ({ currentUser:user});\n}\n  render() {\n    return (\n      <div id=\"root\">\n      \n        <div className=\"row\">\n         <div className=\"col-lg-2\">\n            <div className=\"sidebar\" data-color=\"black\">\n                 <div className=\"sidebar-background\">\n                    <div className=\"logo\">\n                      <div className=\"logo-img\">\n                        <img src={logo} alt=\"My logo\" style={{height:100}}/>\n                           El Cateo \n                      </div>\n                  </div>\n                  {this.state.currentUser ? ( \n                    <nav class=\"navbar \">\n                     <ul class=\"navbar-nav\">\n                        <li class=\"nav-item\">\n                         <NavLink to=\"/addtree\"> ADD TREE </NavLink>\n                         \n                        </li>\n                        <li class=\"nav-item\">\n                         <NavLink to=\"/search\"> SEARCH </NavLink>\n                         \n                        </li>\n                        <li class=\"nav-item\">\n                         \n                        </li>\n                     </ul>\n                    </nav>\n                ) : (\n                      <div></div>\n                  )}\n               </div>\n            </div>\n        </div>\n      <div className=\"col-lg-10\">\n          <div className=\"main-panel\">\n            <div className=\"App\">\n                {this.state.currentUser ? ( \n               <section> \n                  <header>\n                    <nav className=\"navbar navbar-default\">\n                    <i className=\"pe-7s-close-circle\"><div> Log out</div></i>\n                      <p> Welcome { this.state.currentUser.username}</p>\n                    </nav>\n                    <hr className=\"colorgraph\"/>\n                 </header>\n                    <div className=\"col-lg-12 card card-stats\">\n                                 \n                    </div>\n                <div className=\"row\">\n                 <div className=\"col-lg-3 \">\n                  <div className=\"card card-stats\"><p>ensayo</p></div>\n                 </div>\n                 <div className=\"col-lg-3 \">\n                  <div className=\"card card-stats\"><p>ensayo</p></div>\n                 </div>\n                 <div className=\"col-lg-3 \">\n                  <div className=\"card card-stats\"><p>ensayo</p></div>\n                 </div>\n                </div>\n                <div className=\"row\">\n                     <div className=\"col-log-3\">\n                     </div>\n                </div>\n              </section> \n              ) : ( \n                  <div>User not logged in</div>\n                )}\n                \n            <Switch>\n                <Route exact path = \"/search\" render = {(props) =>                 \n                    <Search\n                      currentUser={ this.state.currentUser}\n                      onUserChange={ userDoc => this.syncCurrentUser(userDoc)} \n                      {...props}\n                      \n                    />\n                }/>\n                <Route exact path = \"/\" render = {(props) =>                 \n                    <Login \n                      currentUser={ this.state.currentUser}\n                      onUserChange={ userDoc => this.syncCurrentUser(userDoc)} \n                      {...props} \n                    />\n                }/>\n                <Route exact path = \"/signup\" render={ ()=>\n                  <Signup currentUser={ this.state.currentUser} \n                    onUserChange={ userDoc => this.syncCurrentUser(userDoc)}/>\n                } >\n                </Route>\n               <Route exact path =\"/logout\" render={ ()=>\n                  <Logout currentUser={ this.state.currentUser}\n                    onUserChange= { userDoc => this.syncCurrentUser(userDoc)} />\n                  }>\n                </Route>\n               <Route path=\"/addTree\" render={ (props)=>\n                  <AddTree {...props} currentUser={ this.state.currentUser} \n                   onUserChange={ userDoc => this.syncCurrentUser(userDoc)}/>\n                } >\n                </Route>\n                {/* <Route exact path =\"/listRecord\" render={ ()=>\n                  <ListRecord currentUser={ this.state.currentUser} \n                   onUserChange={userDoc => this.syncCurrentUser(userDoc)}\n                   />\n                } >\n                </Route> */}\n               <Route exact path =\"/addRecord/:id\" render={ (props) =>\n                  <AddRecord {...props} currentUser={ this.state.currentUser} \n                  onUserChange={ userDoc => this.syncCurrentUser(userDoc)} /> \n                  }>\n               </Route>\n\n                <Route exact path =\"/listRecord/:id\" component={ListRecord}/>\n           </Switch>\n             \n          </div>\n          </div>\n          </div>\n          </div> \n       </div>\n   );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n   <BrowserRouter>\n      <App />\n   </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/elcateo.aeea9950.JPG\";"],"sourceRoot":""}